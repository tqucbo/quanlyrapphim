@model QuanLyRapPhim.Models.MultipleViewModelForChooseSeatView

@{
    ViewData["Title"] = "Chọn ghế";

    var SeatRow = Model.seatModels.Select(sr => sr.seatRowChar).Distinct().ToList();

    var seatCategories = Model.seatModels.Select(sc => new
    {
        CategoryName = sc.seatCategory.seatCategoryName,
        CategoryPrice =
    sc.seatCategory.seatCategoryPrice
    }).Distinct().ToList();

    string GetSeatModelsBySeatRow(char rowChar)
    {
        string htmlRaw = "";
        var seats = (from s in Model.seatModels
                     where s.seatRowChar == rowChar
                     select s).ToList();
        seats.ForEach(
        s =>
        {
            string seatColor = s.seatCategory.seatCategoryName.Contains("Standard")
    ? "btn-primary"
    : s.seatCategory.seatCategoryName.Contains("VIP")
    ? "btn-danger"
    : s.seatCategory.seatCategoryName.Contains("Premium")
    ? "btn-info"
    : "btn-success";
            htmlRaw = htmlRaw + $@"<td><a class=""btn {seatColor}"" style=""width: 100%; max-width: 50px; color: white;""
id=""{s.seatRowChar}{s.seatColumnNumber}"" onClick=""chooseSeat('{s.seatRowChar}', {s.seatColumnNumber},
{s.seatCategory.seatCategoryPrice}, this.className)"">{s.seatRowChar}{s.seatColumnNumber}</a></td>";
        }
        );
        return htmlRaw;
    }


    string GetAllSeatCategory()
    {
        string htmlRaw = $@"";
        foreach (var i in seatCategories)
        {
            string seatColor = i.CategoryName.Contains("Standard")
            ? "bg-primary"
            : i.CategoryName.Contains("VIP")
            ? "bg-danger"
            : i.CategoryName.Contains("Premium")
            ? "bg-info"
            : "bg-success";
            htmlRaw = htmlRaw + $@"<div class=""d-flex mt-1""><div class=""{seatColor} rounded mr-2"" style=""width: 25px; height:
25px;""></div>"
            + $@"<div>{i.CategoryName} - {i.CategoryPrice}VND/ghế</div></div>";
        }
        htmlRaw = htmlRaw + $@"<div class=""d-flex mt-1""><div class=""bg-secondary rounded mr-2"" style=""width: 25px; height:
25px;""></div><div>Không thể chọn</div></div>";
        return htmlRaw;
    }

    string formatPrice(int price)
    {
        var ni = new System.Globalization.CultureInfo(System.Globalization.CultureInfo.CurrentCulture.Name).NumberFormat;
        ni.NumberDecimalDigits = 0; //Keep the ".00" from appearing
        ni.NumberGroupSeparator = " "; //Set the group separator to a space
        ni.NumberGroupSizes = new int[] { 3 }; //Groups of 3 digits

        return price.ToString("N", ni);
    }
}

<div class="row no-gutters justify-content-between">
    <h1 style="align-self: self-end;">
        @ViewData["Title"]
    </h1>
    <a class="btn btn-primary text-white" id="btnThanhToan"
        style="height: min-content; width:100%; max-width: 150px; align-self: self-end;">
        <span id="soTien">0</span><span> VND</span>
    </a>
</div>

<hr />

<div class="container bg-warning w-100 rounded">
    <div>Cụm rạp : <strong>@Model.cinemaModel.cinemaName</strong> | Phòng chiếu :
        <strong>@Model.filmSecheduleModel.CinemaRoom.cinemaRoomName</strong>
    </div>
    <div>Suất chiếu: <strong>@Model.filmSecheduleModel.filmShowTime.ToString(@"hh\:mm")
            @Model.filmSecheduleModel.filmShowDate.ToShortDateString()</strong> | Số ghế còn lại : <strong
            id="remainSeats"></strong></div>
</div>

<center>
    <p class="text-secondary" style="margin-top: 25px; margin-bottom: 50px;">
        --- MÀN HÌNH ---
    </p>
    <table>
        @foreach (var i in SeatRow)
        {
            <tr>
                @Html.Raw(GetSeatModelsBySeatRow(i))
            </tr>
        }
    </table>
</center>

<center>
    <div class="row no-gutters justify-content-around mt-3 w-75">
        @Html.Raw(GetAllSeatCategory())
    </div>
</center>

@section Scripts {
    <script>
        var listOfChooseSeat = [];

        var listOfBoughtSeat = JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.seatModelsBought.Select(s => s.seatName).ToList()))');

        var numberOfSeat = parseInt(JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.seatModels.ToList().Count))'));

        var numberOfBoughtSeat = parseInt(JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.seatModelsBought.ToList().Count))'));

        var numberOfRemainSeat = numberOfSeat - numberOfBoughtSeat;

        $(document).ready(function (event) {
            $.each(listOfBoughtSeat, function (index, value) {
                $("#".concat(value)).removeClass();
                $("#".concat(value)).addClass("btn btn-secondary");
                $("#".concat(value)).prop("onclick", null);
            });

            $("#remainSeats").text("".concat(numberOfRemainSeat).concat("/").concat(numberOfSeat));
        });

        $("#btnThanhToan").click(function (event) {
            if (listOfChooseSeat.length != 0) {
                $.ajax({
                    type: "POST",
                    url: "@Url.RouteUrl("redirectToPayment")",
                    data: {
                        "listOfChooseSeat": listOfChooseSeat,
                        "filmScheduleId": "@Model.filmSecheduleModel.filmSecheduleId",
                        "price": parseInt($("#soTien").text())
                    },
                    dataType: "json",
                    success: function (response) {
                        window.location.href = response.url;
                    },
                    error: function (response) {
                        console.log(response);
                    }
                });
            }
        });

        function chooseSeat(row, column, price, className) {

            var standardSeatAndNotChoose = "btn btn-primary";
            var vipSeatAndNotChoose = "btn btn-danger";
            var premiumSeatAndNotChoose = "btn btn-info";
            var coupleSeatAndNotChoose = "btn btn-success";

            var chooseSeat = "btn btn-warning";

            $("#".concat(row).concat(column)).removeClass();
            listOfChooseSeat.push(row.concat(column));
            $("#soTien").text(parseInt($("#soTien").text()) + price);

            if (className.includes(standardSeatAndNotChoose)) {
                $("#".concat(row).concat(column)).addClass(chooseSeat.concat(" standard"));
            } else if (className.includes(vipSeatAndNotChoose)) {
                $("#".concat(row).concat(column)).addClass(chooseSeat.concat(" vip"));
            } else if (className.includes(premiumSeatAndNotChoose)) {
                $("#".concat(row).concat(column)).addClass(chooseSeat.concat(" premium"));
            } else if (className.includes(coupleSeatAndNotChoose)) {
                $("#".concat(row).concat(column)).addClass(chooseSeat.concat(" couple"));
                if (column % 2 == 0) {
                    $("#".concat(row).concat(column - 1)).removeClass();
                    $("#".concat(row).concat(column - 1)).addClass(chooseSeat.concat(" couple"));
                    listOfChooseSeat.push(row.concat(column - 1));
                } else {
                    $("#".concat(row).concat(column + 1)).removeClass();
                    $("#".concat(row).concat(column + 1)).addClass(chooseSeat.concat(" couple"));
                    listOfChooseSeat.push(row.concat(column + 1));
                }
                $("#soTien").text(parseInt($("#soTien").text()) + price);
            } else if (className.includes(chooseSeat)) {
                listOfChooseSeat = listOfChooseSeat.filter(s => s !== row.concat(column));
                $("#soTien").text(parseInt($("#soTien").text()) - price * 2);
                if (className.includes("standard")) {
                    $("#".concat(row).concat(column)).addClass(standardSeatAndNotChoose);
                } else if (className.includes("vip")) {
                    $("#".concat(row).concat(column)).addClass(vipSeatAndNotChoose);
                } else if (className.includes("premium")) {
                    $("#".concat(row).concat(column)).addClass(premiumSeatAndNotChoose);
                } else if (className.includes("couple")) {
                    $("#".concat(row).concat(column)).addClass(coupleSeatAndNotChoose);
                    if (column % 2 == 0) {
                        $("#".concat(row).concat(column - 1)).removeClass();
                        $("#".concat(row).concat(column - 1)).addClass(coupleSeatAndNotChoose);
                        listOfChooseSeat = listOfChooseSeat.filter(s => s !== row.concat(column - 1));
                    } else {
                        $("#".concat(row).concat(column + 1)).removeClass();
                        $("#".concat(row).concat(column + 1)).addClass(coupleSeatAndNotChoose);
                        listOfChooseSeat = listOfChooseSeat.filter(s => s !== row.concat(column + 1));

                    }
                    $("#soTien").text(parseInt($("#soTien").text()) - price);
                }
            }
        }
    </script>
}