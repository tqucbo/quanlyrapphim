@model QuanLyRapPhim.Models.MultipleViewModelForPaymentView

@{
    ViewData["Title"] = "Thanh toán";

    var filmPosterImage = System.IO.File.Exists($"{System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), "wwwroot")}/poster/{Model.filmSecheduleModel.film.filmPosterImage}") ? Model.filmSecheduleModel.film.filmPosterImage : "noimageavailable.jpg";
    
    var filmGenre = string.IsNullOrEmpty(Model.filmSecheduleModel.film.filmGenreId) ? "" :
            Model.filmSecheduleModel.film.filmGenre.filmGenreName;
            var filmGenreStyle = string.IsNullOrEmpty(Model.filmSecheduleModel.film.filmGenreId) ? "" : "width: 48px; height: 27px";
    
    string getSeatFromSeatModel() {
        string htmlSeat = "";
        foreach(var i in Model.seatModels){
            if (Model.seatModels.IndexOf(i) == 0 && Model.seatModels.IndexOf(i) == Model.seatModels.Count - 1){
                htmlSeat += $"<span>{i.seatName}<span>";
            } else if (Model.seatModels.IndexOf(i) == 0) {
                htmlSeat += $"<span>{i.seatName}, ";
            } else if (Model.seatModels.IndexOf(i) == Model.seatModels.Count - 1) {
                htmlSeat += $"{i.seatName}</span>";
            } else {
                htmlSeat += $"{i.seatName}, ";
            }  
        }
        return htmlSeat;
    }

}

<div class="row no-gutters justify-content-between">
    <h1 style="align-self: self-end;">
        @ViewData["Title"]
    </h1>
    <a id="btnXacNhanMuaVe" style="height: min-content; width:100%; max-width: 200px; align-self: self-end;">
        Thanh toán trong : <span id="Countdown">00:00</span>
    </a>
</div>
<hr />


<div class="row" style="display: flex;">
    <div class="col-md-7">
        <h4>Hình thức thanh toán</h4>
        <div class="pt-2">
            @foreach (var item in Model.paymentMethodModels){
                <div style="display: table; height: 64px;">
                    <div style="display: table-cell; width: fit-content; padding-right: 10px;">
                        <input class="" type="radio" name="paymentMethod" value="@item.paymentMethodName">
                    </div>
                    <div style="display: table-cell; width: fit-content; padding-right: 10px;">
                        <img class="" src="~/paymentMethod/@item.paymentMethodImage" alt="@item.paymentMethodName.ToUpper()" width="48px" height="48px">
                    </div>
                    @{
                        var verticalAlign = string.IsNullOrEmpty(item.paymentMethodNote) ? "center" : "top";
                    }
                    <div style="display: table-cell; vertical-align: @verticalAlign">
                        <div>@item.paymentMethodName</div>
                        <div style="font-size: small;">@item.paymentMethodNote</div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class=" col-md-5">
        <div class="row no-gutters flex">
            <div class="col-auto" style="position: relative;">
                <img src="~/poster/@filmPosterImage" alt="@Model.filmSecheduleModel.film.filmName.ToUpper()" style="height: auto; max-width: 128px;">
                <span class="rounded"
                    style="position: absolute; top: 5px; left: 5px; @filmGenreStyle; color: white; background-color: orange;">
                    <center>
                        <strong style="user-select: none;">@filmGenre</strong>
                    </center>
                </span>
            </div>
            <div class="col no-gutters w-100 pl-2 pr-2" style="">
                <h4>@Model.filmSecheduleModel.film.filmName.ToUpper()</h4>
                <br>
                <p style="font-size: smaller;">
                    Cụm rạp : <strong>@Model.cinemaModel.cinemaName</strong>
                </p>
                <p style="font-size: smaller;">
                    Phòng chiếu : <strong>@Model.filmSecheduleModel.CinemaRoom.cinemaRoomName</strong>
                </p>
                <p style="font-size: smaller;">
                    Suất chiếu: <strong>@Model.filmSecheduleModel.filmShowTime.ToString(@"hh\:mm") @Model.filmSecheduleModel.filmShowDate.ToShortDateString()</strong>
                </p>
            </div>
        </div>
        <br>    
        <div>
            <p>
                Các ghế đã chọn : <strong>@Html.Raw(getSeatFromSeatModel())</strong>
            </p>
            <p>
                Tổng số tiền phải thanh toán : <strong><span>@Model.price</span<span> VND</span></strong>
            </p>
        </div>
        <div>
            <span>
                Nhập mã khuyến mãi : 
            </span>
            <span>
                <input class="rounded" type="text">
                <input class="btn-primary rounded" type="button" value="Kiểm tra">
            </span>
        </div>
    </div>    
</div>

        


@section Scripts {
    <script>

        var flag = true;

        function countdown( elementName, minutes, seconds )
        {
            var element, endTime, mins, msLeft, time;

            function twoDigits( n )
            {
                return (n <= 9 ? "0" + n : n);
            }

            function updateTimer()
            {
                msLeft = endTime - (+new Date);
                if ( msLeft >= 0 ) {
                    time = new Date(msLeft);
         
                    mins = time.getUTCMinutes();
                    element.innerHTML = twoDigits(mins) + ':' + twoDigits( time.getUTCSeconds() );
                    setTimeout( updateTimer, time.getUTCMilliseconds() + 500 );
                } else {
                    $("#btnXacNhanMuaVe").text("Đã huỷ thanh toán");
                    $("#btnXacNhanMuaVe").removeClass().addClass("btn btn-secondary text-white")
                    flag = false;
                }
            }

            element = document.getElementById( elementName );
            endTime = (+new Date) + 1000 * (60*minutes + seconds) + 500;
            updateTimer();
        }
        countdown("Countdown", 0, 30 );

        $(document).ready(function(event) {
            if (!$("input[name='paymentMethod']:checked").val()){
                $("#btnXacNhanMuaVe").removeClass().addClass("btn btn-secondary text-white")
            } else {
                $("#btnXacNhanMuaVe").removeClass().addClass("btn btn-primary text-white")
            }   
        });

        $("input[name='paymentMethod']").click(function(event) {
            $("#btnXacNhanMuaVe").removeClass().addClass("btn btn-primary text-white")
        });

        $("#btnXacNhanMuaVe").click(function(event) {
            if ($("input[name='paymentMethod']:checked").val() && flag == true){
                $.ajax({
                    type: "POST",
                    url: "@Url.RouteUrl("CreateTicket")",
                    data: 
                    {
                        "listIdOfChooseSeat": JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.seatModels.Select(x => x.seatId).ToList()))'),
                        "accountId": "ba21fe58-efb0-441d-879a-68c4867a394b",
                        "paymentMethodName": $("input[name='paymentMethod']:checked").val(),
                        "price": JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.price))'),
                        "filmSecheduleId": JSON.parse('@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.filmSecheduleModel.filmSecheduleId))'),
                    },
                    traditional: true,
                    success: function(response){
                        window.location.href = response.url
                    },
                });
            }
        });
    </script>
}